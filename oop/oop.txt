•	Explain OOP concepts?
o	It eases maintenance through the use of encapsulation. One can easily change the underlying representation by keeping the methods same.
•	Encapsulation?
o	Data Hiding, private members
o	Bundling of data and methods together.
•	 Polymorphism?
o	Certain code or operations or objects behave differently in different contexts.
•	What is inheritance, give an example?
o	One class is based on another class and uses the same data and methods.
•	What and why java doesn’t allow multiple inheritance?
o	To avoid ambiguity and the diamond problem.
•	Explain the difference between overloading and overriding?
o	When we redefine the function in the same class it’s called overloading.
o	When we redefine the function in derived class it’s called overriding.
•	What are the constraints on arguments number and datatype in these two cases.
o	In overloading you can redefine the function with more parameters but in overriding you cannot change it.
•	Can we have function overloading with different return types.
o	No as it is not allowed in either C++ or Java. But it is allowed when the argument list is changed.
•	Java:
o	Collections Frameworks
	Array list vs linked list
	Hash set vs tree set
o	Multi-threading?
	This is like multi-tasking, executing multiple threads simultaneously.
o	What is thread pool, why is it needed?
	It reuses previously created threads to execute current tasks and offers a solution to the problem of thread cycle overhead and resource thrashing
o	Why is String type immutable in Java?
	Since it is immutable it can be safely shared between many threads, which is very important for multithreading programming
o	What is exception handling?
