https://leetcode.com/problems/interval-list-intersections/
https://leetcode.com/problems/simplify-path/
https://leetcode.ca/2020-01-30-1522-Diameter-of-N-Ary-Tree/

https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/description/
def maxEvents(self, events: List[List[int]]) -> int:
    events.sort()
    res, d = 0, events[0][0]
    heap = []
    while events or heap:
        # Add new events that can be attended on day `d`
        while len(events) > 0 and events[0][0] == d:
            heapq.heappush(heap, events.pop(0)[1])

        # remove events that are already completed
        while heap and heap[0] < d:
            heapq.heappop(heap)

        # attend one event in day `d`
        if len(heap) > 0:
            res += 1
            heapq.heappop(heap)

        d += 1
    return res